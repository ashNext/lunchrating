DROP TABLE vote IF EXISTS;
DROP TABLE user_roles IF EXISTS;
DROP TABLE user IF EXISTS;
DROP TABLE dish IF EXISTS;
DROP TABLE menu IF EXISTS;
DROP TABLE rest IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE rest
(
    id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name    VARCHAR(255)    NOT NULL
);

CREATE TABLE menu
(
    id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    rest_id     INTEGER NOT NULL,
    date        DATE    NOT NULL,
    FOREIGN KEY (rest_id) REFERENCES rest (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX menu_unique_rest_date_idx
    ON menu (rest_id, date);

CREATE TABLE dish
(
    id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    menu_id     INTEGER         NOT NULL,
    name        VARCHAR(255)    NOT NULL,
    price       INTEGER         NOT NULL,
    FOREIGN KEY (menu_id) REFERENCES menu (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX dish_unique_menu_name_idx
    ON dish (menu_id, name);

CREATE TABLE user
(
    id          INTEGER         GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name        VARCHAR(255)    NOT NULL,
    password    VARCHAR(255)    NOT NULL
);
CREATE UNIQUE INDEX users_unique_name_idx
    ON user (name);

CREATE TABLE user_roles
(
    user_id INTEGER NOT NULL,
    role    VARCHAR(255),
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES user (id) ON DELETE CASCADE
);

CREATE TABLE vote
(
    id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    rest_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    date    DATE    NOT NULL,
--     CONSTRAINT vote_idx UNIQUE (rest_id, user_id, date),
    FOREIGN KEY (rest_id) REFERENCES rest (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES user (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX vote_unique_user_date_idx
    ON vote (user_id, date);